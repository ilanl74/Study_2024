IDisposable interface is to clean up unmanaged resources (like database connections file io)

boxing 
boxing should be avoided using generics and ref key word 

// assigned int value
        // 2020 to num
        int num = 2020;

// boxing
object obj = num;  // a copy of num is wraped in an object 

// value of num to be change
num = 100;

System.Console.WriteLine
("Value - type value of num is : {0}", num);
System.Console.WriteLine
("Object - type value of obj is : {0}", obj);

output
Value - type value of num is : 100
Object - type value of obj is : 2020

unboxing is done exlicitly  (int)obj;

comparing oject(for sort...)
https://medium.com/@ramyelnaghy/icomparable-vs-icomparer-vs-comparison-delegate-in-c-mastering-sorting-and-comparisons-60d9e11b9889
int general there are 3 options 
delegate for elegancy -> employees.Sort((x, y)=>x.Name.CompareTo(y.Name))
implementing Icomparer and use it in the sort -> employees.Sort(ComparerImplementation);//ComparerImplementation implement IComparer<Employee>

dictunary and hash needs the key to implement IEquatable<KeyObj> and override the GetHashCode() (use System.HashCode.Combine()) and  and Equals()
